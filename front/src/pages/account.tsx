import Head from "next/head";
import React, { useEffect, useState } from "react";
import NavBar from "@/components/menu/NavBar";
import Footer from "@/components/footer/Footer";
import Image from "next/image";
import accountImg from "../../public/assets/accountImg.jpg";
import UserServices from "_services/user";
import AuthServices from "_services/auth";

type FormValues = {
  lastname: string;
  firstname: string;
  email: string;
  password: string;
  phone: string;
};

interface Token {
  id: number;
}

const getToken = () => {
  const token = localStorage.getItem("token");
  return token ? token : "";
};

export default function Account() {
  const [formValues, setFormValues] = useState<FormValues>({
    lastname: "",
    firstname: "",
    email: "",
    password: "",
    phone: "",
  });

  useEffect(() => {
    const token = getToken();
    const auth = new AuthServices();
    const tokenDecoded = auth.jwtDecode(token);
    const idUser = (tokenDecoded as Token)?.id;
    /**@ts-ignore */
    if (idUser) {
      const getUser = async (token: string) => {
        const userService = new UserServices();
        try {
          const response = await userService.getUserById(idUser);
          if (response.status === 200) {
            setFormValues(response.data);
          }
        } catch (error) {
          console.log(error);
        }
      };

      getUser(token);
    }
  }, []);

  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    const { name, value } = event.target;
    setFormValues((prevValues) => ({ ...prevValues, [name]: value }));
  };

  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {
    event.preventDefault();
    const token = getToken();
    const auth = new AuthServices();
    const tokenDecoded: Token | unknown = auth.jwtDecode(token);
    const idUser = (tokenDecoded as Token)?.id;
    if (idUser) {
      const userService = new UserServices();
      userService
        .updateUser(idUser.toString(), formValues)
        .then((response) => {});
    }
  };

  return (
    <>
      <Head>
        <title>Mon Compte</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <link
          href="https://cdnjs.cloudflare.com/ajax/libs/flowbite/1.6.3/flowbite.min.css"
          rel="stylesheet"
        />
      </Head>
      <NavBar />
      <div className="relative rounded-lg h-[200px] sm:h-[250px] md:h-[300px] lg:h-[350px] xl:h-[400px] m-28">
        <Image
          src="https://images.unsplash.com/photo-1503220317375-aaad61436b1b?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1470&q=80"
          className="rounded-3xl"
          layout="fill"
          alt="Picture account page"
          objectFit="cover"
        />
      </div>
      <div className="">
        <div className="flex items-center justify-center p-12 mb-60">
          <div className="mx-auto w-full max-w-[550px] h-auto">
            <form onSubmit={handleSubmit}>
              <div className="mb-5">
                <label
                  htmlFor="lastname"
                  className="mb-3 block text-base font-medium text-[#07074D]"
                >
                  Nom
                </label>
                <input
                  id="lastname"
                  value={formValues.lastname}
                  onChange={handleInputChange}
                  type="text"
                  name="lastname"
                  placeholder="Nom"
                  className="w-full rounded-md border border-[#e0e0e0] bg-white py-3 px-6 text-base font-medium text-[#6B7280] outline-none focus:border-[#6A64F1] focus:shadow-md"
                />
              </div>
              <div className="mb-5">
                <label
                  htmlFor="firstname"
                  className="mb-3 block text-base font-medium text-[#07074D]"
                >
                  Prénom
                </label>
                <input
                  id="firstname"
                  value={formValues.firstname}
                  onChange={handleInputChange}
                  type="text"
                  name="firstname"
                  placeholder="Prénom"
                  className="w-full rounded-md border border-[#e0e0e0] bg-white py-3 px-6 text-base font-medium text-[#6B7280] outline-none focus:border-[#6A64F1] focus:shadow-md"
                />
              </div>
              <div className="mb-5">
                <label
                  htmlFor="email"
                  className="mb-3 block text-base font-medium text-[#07074D]"
                >
                  E-mail
                </label>
                <input
                  id="email"
                  value={formValues.email}
                  onChange={handleInputChange}
                  type="text"
                  name="email"
                  placeholder="example@domain.com"
                  className="w-full rounded-md border border-[#e0e0e0] bg-white py-3 px-6 text-base font-medium text-[#6B7280] outline-none focus:border-[#6A64F1] focus:shadow-md"
                />
              </div>
              <div className="mb-5">
                <label
                  htmlFor="password"
                  className="mb-3 block text-base font-medium text-[#07074D]"
                >
                  Mot de passe
                </label>
                <input
                  type="password"
                  value="password"
                  onChange={handleInputChange}
                  name="password"
                  id="password"
                  placeholder="Mot de passe"
                  className="w-full rounded-md border border-[#e0e0e0] bg-white py-3 px-6 text-base font-medium text-[#6B7280] outline-none focus:border-[#6A64F1] focus:shadow-md"
                />
              </div>
              <div className="mb-5">
                <label
                  htmlFor="phone"
                  className="mb-3 block text-base font-medium text-[#07074D]"
                >
                  Téléphone
                </label>
                <input
                  type="text"
                  value={formValues.phone}
                  onChange={handleInputChange}
                  name="phone"
                  id="phone"
                  placeholder="Téléphone"
                  className="w-full rounded-md border border-[#e0e0e0] bg-white py-3 px-6 text-base font-medium text-[#6B7280] outline-none focus:border-[#6A64F1] focus:shadow-md"
                />
              </div>
              <div className=" flex justify-end">
                <button className="hover:shadow-form rounded-md bg-primary hover:bg-hover-primary focus:outline-none focus:bg-hover-primary ease-in-out duration-500 hover:scale-105 py-3 px-8 text-base font-semibold text-white outline-none">
                  Mettre à jour
                </button>
              </div>
            </form>
          </div>
        </div>
      </div>
      <div className="">
        <Footer />
      </div>
      <script src="https://cdnjs.cloudflare.com/ajax/libs/flowbite/1.6.3/flowbite.min.js"></script>
    </>
  );
}
